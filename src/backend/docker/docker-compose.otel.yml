# example https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/examples/demo
version: "3"

services:
  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo.yaml:/etc/tempo.yaml
      - ./docker/.data/tempo:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200" # tempo
      - "4317" # otlp grpc
      - "4318" # otlp http
      - "9411" # zipkin

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.85.0
    restart: always
    command:
      [
        "--config=/etc/otel-collector-config.yaml",
        "${OTELCOL_ARGS}"
      ]
    volumes:
      - ./docker/otel-connector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
      - "3500:3500" # loki receiver HTTP
      - "3600:3600" # loki receiver gRPC
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - tempo
    networks:
      - loki
      - default

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
