definitions:
  models.Cart:
    properties:
      currency:
        type: string
      discount:
        type: number
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/models.LineItem'
        type: array
      shipping:
        type: number
      shipping_method:
        type: string
      status:
        type: string
      tax:
        type: number
      total:
        type: number
      user_id:
        type: string
    type: object
  models.CreateCartReq:
    properties:
      items:
        items:
          $ref: '#/definitions/models.LineItem'
        type: array
      user_id:
        type: string
    type: object
  models.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  models.LineItem:
    properties:
      attributes:
        additionalProperties: true
        type: object
      img:
        type: string
      item_id:
        type: integer
      product_description:
        type: string
      product_name:
        type: string
      quantity:
        type: integer
      unit_price:
        type: number
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a rest api for cart which saves items to redis server
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cart API
  version: "1.0"
paths:
  /cart:
    post:
      consumes:
      - application/json
      description: add by json new Cart
      parameters:
      - description: Creates new cart
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/models.CreateCartReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Creates new cart
      tags:
      - Cart
  /cart/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes Cart by ID
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Deletes a Cart
      tags:
      - Cart
    get:
      consumes:
      - application/json
      description: Get Cart by ID
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Gets a Cart
      tags:
      - Cart
    put:
      consumes:
      - application/json
      description: update by json cart
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      - description: Updates cart
        in: body
        name: update_cart
        required: true
        schema:
          $ref: '#/definitions/models.CreateCartReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Update cart
      tags:
      - Cart
  /cart/{id}/item:
    post:
      consumes:
      - application/json
      description: Adds item into cart, if item exists sums the quantity
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      - description: Update line item
        in: body
        name: lineItem
        required: true
        schema:
          $ref: '#/definitions/models.LineItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Add a line item
      tags:
      - Cart
  /cart/{id}/item/{itemID}:
    delete:
      consumes:
      - application/json
      description: Delete line item by json
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      - description: Item ID
        in: path
        name: itemID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Delete line item
      tags:
      - Cart
    put:
      consumes:
      - application/json
      description: Updates item in the cart,
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: string
      - description: Item ID
        in: path
        name: itemID
        required: true
        type: string
      - description: Update line item
        in: body
        name: lineItem
        required: true
        schema:
          $ref: '#/definitions/models.LineItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTPError'
      summary: Updates a line item
      tags:
      - Cart
swagger: "2.0"
